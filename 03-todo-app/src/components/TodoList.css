/* 
  Styles from TodoList, AddTask and TaskList are included in this single CSS.
  It is easier to style since they're all related to each other.
  Considering in some time splitting them in their own's CSS file :).
*/

/* TodoList.jsx */
.todo-list {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2rem;
  width: 80vw;
  max-width: 40rem;
  margin: 0 auto 5rem;
}

.form {
  width: 100%;
  padding: 0 1rem;
}

/* AddTask.jsx */
.task-label {
  display: block;
  text-align: center;
  font-size: 0.875rem;
  font-weight: 600;
  margin-bottom: 0.75rem;
}

.input-wrapper {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  margin: 0 auto;
  justify-content: center;
  align-items: center;
  gap: 1rem;
}

.new-task {
  flex: 1;
  flex-basis: 100%;
  display: block;
  border: none;
  border-radius: 1rem;
  background-color: var(--dark-olive);
  color: var(--white);
  padding: 0.75rem 1.5rem;

  &::placeholder {
    color: currentColor;
    opacity: 0.6;
  }
}

.submit-task {
  flex-grow: 1;
  padding: 0.75rem 3rem;
  margin-left: auto;
  background-color: var(--orange);
  color: var(--white);
  font-weight: 500;
  border: none;
  border-radius: 1rem;
  transition: 0.5s ease-out all;
  cursor: pointer;

  &:hover {
    background-color: hsl(17, 78%, 45%);
  }
}

/* TaskList.jsx */
.tasks {
  padding: 0 2rem;
  width: 100%;
}

.task {
  list-style: none;
  display: flex;
  justify-content: start;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
  min-height: 3rem;
}

.task:has(.task-check:checked) .task-content {
  text-decoration: 2px line-through var(--orange);
}

.task:has(.task-check:checked) {
  opacity: 0.8;
}

.task-content {
  font-size: 1rem;
  color: var(--black);
  cursor: pointer;
}

.task-check {
  order: -1;
  position: relative;
  width: 1.125rem;
  height: 1.125rem;
  cursor: pointer;
}

/* Custom checkbox on top of real checkbox */
.task-check::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: var(--wheat);
  transition: 0.2s ease-out all;
}
.task-check:checked::before {
  background-color: var(--dark-olive);
}

/* Checkmark of the checkbox */
.task-check::after {
  content: "";
  position: absolute;
  top: 3px;
  left: calc(50% - 2px);
  background-color: transparent;
  width: 5px;
  height: 9px;
  border: solid transparent;
  border-width: 0 2px 2px 0;
  transform: rotate(130deg);
  transition: 0.3s ease-out all;
}

.task-check:checked::after {
  border-color: var(--wheat);
  transform: rotate(45deg);
}

.task-delete {
  margin-left: auto;
  border: 0;
  border-radius: 1rem;
  background-color: var(--dark-olive);
  padding: 0.5rem 1rem;
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--white);
  cursor: pointer;
  transition: 0.5s ease-out all;

  &:hover {
    background-color: var(--black);
  }
}

@media screen and (min-width: 45rem) {
  .new-task {
    flex-basis: auto;
    border-radius: 1rem 0 0 1rem;
  }

  .input-wrapper {
    gap: 0;
  }

  .submit-task {
    flex-grow: 0;
    border-radius: 0 1rem 1rem 0;
  }
}
